<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <Import Condition=" '$(EAZFUSCATOR_NET_HOME)' != '' and Exists('$(EAZFUSCATOR_NET_HOME)\Integration\MSBuild\Eazfuscator.NET.targets') " Project="$(EAZFUSCATOR_NET_HOME)\Integration\MSBuild\Eazfuscator.NET.targets" />
  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.1;net472</TargetFrameworks>
    <RootNamespace>ICD.Connect.Core</RootNamespace>
    <AssemblyName>ICD.Connect.Core</AssemblyName>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <Deterministic>true</Deterministic>
    <EazfuscatorIntegration>MSBuild</EazfuscatorIntegration>
    <EazfuscatorActiveConfiguration>Release</EazfuscatorActiveConfiguration>
    <EazfuscatorCompatibilityVersion>2018.2</EazfuscatorCompatibilityVersion>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp3.1'">
    <OutputType>Exe</OutputType>
    <StartupObject>ICD.Connect.Core.Program</StartupObject>
    <ApplicationIcon>icon.ico</ApplicationIcon>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'net472'">
    <OutputType>Library</OutputType>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="bin\**" />
    <Compile Remove="SIMPLSharpLogs\**" />
    <EmbeddedResource Remove="bin\**" />
    <EmbeddedResource Remove="SIMPLSharpLogs\**" />
    <None Remove="bin\**" />
    <None Remove="SIMPLSharpLogs\**" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="ICD.Connect.projectinfo" />
    <None Remove="Properties\ControlSystem.cfg" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.8.0" />
    <PackageReference Condition="'$(TargetFramework)' == 'net472'" Include="Crestron.SimplSharp.SDK.Library" Version="2.14.182" />
    <PackageReference Condition="'$(TargetFramework)' == 'net472'" Include="Crestron.SimplSharp.SDK.Program" Version="2.14.182" />
    <PackageReference Condition="'$(TargetFramework)' == 'net472'" Include="Crestron.SimplSharp.SDK.ProgramLibrary" Version="2.14.182" />
    <PackageReference Include="Topshelf" Version="4.3.1-develop.253" />
    <PackageReference Include="TopShelf.StartParameters" Version="1.0.2" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Condition="'$(TargetFramework)' == 'net472'" Include="..\..\ICD.Connect.Misc\ICD.Connect.Misc.CrestronPro\ICD.Connect.Misc.CrestronPro_NetStandard.csproj" />
    <ProjectReference Include="..\ICD.Connect.Krang\ICD.Connect.Krang_NetStandard.csproj" />
  </ItemGroup>

  <!-- Find Windows Kit path and then SignTool path for the post-build event -->
  <Target Name="FindSignTool">
    <PropertyGroup>
      <WindowsKitsRoot>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot10', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
      <WindowsKitsRoot Condition="'$(WindowsKitsRoot)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot81', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
      <WindowsKitsRoot Condition="'$(WindowsKitsRoot)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
      <SignToolPath Condition="'$(SignToolPath)' == '' And '$(Platform)' == 'AnyCPU' and Exists('$(WindowsKitsRoot)bin\x64\signtool.exe')">$(WindowsKitsRoot)bin\x64\</SignToolPath>
      <SignToolPath Condition="'$(SignToolPath)' == '' And Exists('$(WindowsKitsRoot)bin\$(Platform)\signtool.exe')">$(WindowsKitsRoot)bin\$(Platform)\</SignToolPath>
      <SignToolPathBin Condition="'$(SignToolPath)' == ''">$([System.IO.Directory]::GetDirectories('$(WindowsKitsRoot)bin',"10.0.*"))</SignToolPathBin>
      <SignToolPathLen Condition="'$(SignToolPathBin)' != ''">$(SignToolPathBin.Split(';').Length)</SignToolPathLen>
      <SignToolPathIndex Condition="'$(SignToolPathLen)' != ''">$([MSBuild]::Add(-1, $(SignToolPathLen)))</SignToolPathIndex>
      <SignToolPathBase Condition="'$(SignToolPathIndex)' != ''">$(SignToolPathBin.Split(';').GetValue($(SignToolPathIndex)))\</SignToolPathBase>
      <SignToolPath Condition="'$(SignToolPath)' == '' And '$(SignToolPathBase)' != '' And '$(Platform)' == 'AnyCPU'">$(SignToolPathBase)x64\</SignToolPath>
      <SignToolPath Condition="'$(SignToolPath)' == '' And '$(SignToolPathBase)' != ''">$(SignToolPathBase)$(Platform)\</SignToolPath>
    </PropertyGroup>
  </Target>

  <Target Name="SignDll" AfterTargets="AfterBuild" DependsOnTargets="FindSignTool" Condition="'$(Configuration)'=='Release'">
    <Exec Command="&quot;$(SignToolPath)signtool.exe&quot; sign /a /n &quot;Integrated Commercial Design&quot; &quot;$(TargetDir)$(TargetFileName)&quot;" />
    <Exec Command="&quot;$(SignToolPath)signtool.exe&quot; sign /a /n &quot;Integrated Commercial Design&quot; &quot;$(TargetDir)ICD.Connect.Core.exe&quot;" />
  </Target>
</Project>